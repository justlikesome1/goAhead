<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.mapper.CarMapper">
  <resultMap id="BaseResultMap" type="com.woniu.pojo.Car">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="license" jdbcType="VARCHAR" property="license" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="setting" jdbcType="INTEGER" property="setting" />
    <result column="carstruts" jdbcType="VARCHAR" property="carstruts" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, license, brand, color, setting, carstruts
  </sql>
  <select id="selectByExample" parameterType="com.woniu.pojo.CarExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniu.pojo.CarExample">
    delete from car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniu.pojo.Car">
    insert into car (cid, license, brand, 
      color, setting, carstruts
      )
    values (#{cid,jdbcType=INTEGER}, #{license,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{color,jdbcType=VARCHAR}, #{setting,jdbcType=INTEGER}, #{carstruts,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.pojo.Car">
    insert into car
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="license != null">
        license,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="setting != null">
        setting,
      </if>
      <if test="carstruts != null">
        carstruts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="license != null">
        #{license,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="setting != null">
        #{setting,jdbcType=INTEGER},
      </if>
      <if test="carstruts != null">
        #{carstruts,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.pojo.CarExample" resultType="java.lang.Long">
    select count(*) from car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update car
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.license != null">
        license = #{record.license,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.setting != null">
        setting = #{record.setting,jdbcType=INTEGER},
      </if>
      <if test="record.carstruts != null">
        carstruts = #{record.carstruts,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update car
    set cid = #{record.cid,jdbcType=INTEGER},
      license = #{record.license,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      setting = #{record.setting,jdbcType=INTEGER},
      carstruts = #{record.carstruts,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.pojo.Car">
    update car
    <set>
      <if test="license != null">
        license = #{license,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="setting != null">
        setting = #{setting,jdbcType=INTEGER},
      </if>
      <if test="carstruts != null">
        carstruts = #{carstruts,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.pojo.Car">
    update car
    set license = #{license,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      setting = #{setting,jdbcType=INTEGER},
      carstruts = #{carstruts,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <select id="selectAllCar" resultMap="BaseResultMap">
  	select * from car
  </select>
</mapper>